{"version":3,"sources":["components/Togglable/Togglable.jsx","components/NewTask.jsx","components/Notes/ListNotes.jsx","config.js","services/notes/index.js","services/login.js","hooks/useNotes.js","components/ButtonShowAll.jsx","components/Form.jsx","App.js","index.js"],"names":["Togglable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","toggleVisibility","useImperativeHandle","onClick","NewTask","handleLogout","addNote","newNote","setNewNote","togglebleRef","useRef","onSubmit","e","preventDefault","content","important","current","placeholder","type","onChange","target","value","name","required","ListNotes","notes","handleImportant","setImportant","noteUpdate","id","console","log","config","BASE_NOTES_URL","BASE_USERS_URL","BASE_LOGIN_URL","token","setToken","newToken","getAllNotes","a","axios","get","res","data","createNote","noteToAddState","headers","Authorization","post","updateNote","newObject","put","reques","loginUser","credentials","username","password","initialValue","storageName","useNotes","setNotes","showAll","setShowAll","loading","setLoading","login","setLogin","userlg","setUserlg","useEffect","then","prevNotes","concat","catch","err","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","onLogin","setItem","stringify","noteObject","newNotes","handleShowAll","note","userImportant","filter","inputValue","currentTarget","removeItem","ButtonShowAll","Form","App","className","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed895e29.chunk.js","sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef(({ children, buttonLabel = 'default value ok sucio' }, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      {\n      visible\n        ? (\n          <div>\n            {children}\n            <button onClick={toggleVisibility}>cancel</button>\n          </div>\n          )\n        : (\n          <div>\n            <button onClick={toggleVisibility}>{buttonLabel}</button>\n          </div>\n          )\n    }\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string\n}\n\nexport default Togglable\n","import { useState, useRef } from 'react'\nimport Togglable from './Togglable/Togglable'\n\nconst NewTask = ({ handleLogout, addNote }) => {\n  const [newNote, setNewNote] = useState('')\n  const togglebleRef = useRef()\n\n  // Crear nuevas notas\n  const handleChange = (e) => {\n    if (e.target.value !== '') {\n      setNewNote(e.target.value)\n    } else {\n      setNewNote('')\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (newNote !== '') {\n      const noteToAddState = {\n        content: newNote,\n        important: false\n      }\n      addNote(noteToAddState)\n      togglebleRef.current.toggleVisibility()\n      setNewNote('')\n    }\n  }\n\n  return (\n    <Togglable ref={togglebleRef} buttonLabel='show create note'>\n      <h3>Create note</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder='write a new note'\n          type='text'\n          onChange={handleChange}\n          value={newNote}\n          name='content'\n          required\n        />\n        <button>save</button>\n      </form>\n      <button onClick={handleLogout}>\n        Cerrar sesion\n      </button>\n    </Togglable>\n  )\n}\n\nexport default NewTask\n","import { useState } from 'react'\n\nconst ListNotes = ({ notes, handleImportant }) => {\n  const [important, setImportant] = useState(notes.important)\n\n  const onClick = () => {\n    setImportant(!important)\n    const noteUpdate = {\n      content: notes.content,\n      important: !important,\n      id: notes.id\n    }\n    console.log(noteUpdate)\n    handleImportant(noteUpdate)\n  }\n  return (\n    <li>\n      <div>\n        {notes.content}\n        <button onClick={onClick}>\n          {\n            important ? 'make not important' : 'make important'\n          }\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default ListNotes\n","const config = {\n  BASE_NOTES_URL: '/api/notes',\n  BASE_USERS_URL: '/api/users',\n  BASE_LOGIN_URL: '/api/login'\n}\n\nexport default config\n","import axios from 'axios'\nimport config from '../../config'\nconst { BASE_NOTES_URL } = config\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\nexport const getAllNotes = async () => {\n  try {\n    const res = await axios.get(BASE_NOTES_URL)\n    const { data } = res\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const createNote = async (noteToAddState) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const { content, important } = noteToAddState\n    const res = await axios.post(BASE_NOTES_URL, { content, important }, config)\n    const { data } = res\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const updateNote = async (newObject) => {\n  try {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    console.log(newObject)\n    const reques = await axios.put(`${BASE_NOTES_URL}/${newObject.id}`, newObject, config)\n    console.log(reques)\n    // return reques\n  } catch (error) {\n  }\n}\n","import axios from 'axios'\nimport config from '../config'\n\nconst { BASE_LOGIN_URL } = config\n\nexport const loginUser = async (credentials) => {\n  const { username, password } = credentials\n  const { data } = await axios.post(BASE_LOGIN_URL, { username, password })\n  console.log(data)\n  return data\n}\n\n// export default loginUser\n","// mensaje importante, esta app es solo prueebas ya que no es reutilizable\n// que hace? - refactorizar los estados y crear components inteligentemente\nimport { useEffect, useState } from 'react'\nimport { createNote, getAllNotes, setToken, updateNote } from '../services/notes'\nimport { loginUser } from '../services/login'\n\nconst initialValue = { username: '', password: '' }\n\nconst storageName = 'loggedNoteAppUser'\n\nconst useNotes = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [login, setLogin] = useState(initialValue)\n  const [userlg, setUserlg] = useState(null)\n\n  useEffect(() => {\n    setLoading(true)\n    getAllNotes()\n      .then(res => {\n        setNotes((prevNotes) => prevNotes.concat(res))\n        setLoading(false)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(storageName)\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUserlg(user)\n      setToken(user.token)\n    }\n  }, [])\n\n  const inputValue = (e) => {\n    const data = { ...login }\n    setLogin({\n      ...data,\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  const onLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const user = await loginUser({\n        username: login.username,\n        password: login.password\n      })\n\n      window.localStorage.setItem(storageName, JSON.stringify(user))\n\n      setUserlg(user)\n      setToken(user.token)\n\n      setLogin({ username: '', password: '' })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleLogout = () => {\n    setUserlg(null)\n    setToken(userlg.token)\n    window.localStorage.removeItem(storageName)\n  }\n\n  const addNote = (noteObject) => {\n    createNote(noteObject).then(newNotes => {\n      console.log(newNotes)\n      setNotes(prevNotes => [...prevNotes, newNotes])\n    })\n      .catch(err => console.log(err))\n  }\n\n  const handleShowAll = () => {\n    setShowAll(!showAll)\n    const note = [...notes]\n    if (showAll) {\n      const userImportant = note.filter(user => user.important === false)\n      console.log(note)\n      setNotes(userImportant)\n    } else {\n      const note = [...notes]\n      console.log(note)\n      getAllNotes().then(notes => {\n        setNotes(notes)\n      })\n    }\n  }\n\n  const handleImportant = (data) => {\n    const { content, important, id } = data\n    console.log(important, 'useNotes')\n    const noteUpdate = {\n      content: content,\n      important: important,\n      id\n    }\n    console.log(data)\n    updateNote(noteUpdate).then((data) => data)\n  }\n\n  return {\n    loading,\n    notes,\n    showAll,\n    login,\n    userlg,\n    addNote,\n    handleShowAll,\n    onLogin,\n    inputValue,\n    handleLogout,\n    handleImportant\n  }\n}\n\nexport default useNotes\n","const ButtonShowAll = ({ handleShowAll, showAll }) => {\n  return (\n    <button onClick={handleShowAll}>\n      {showAll ? 'Show only important' : 'Show all'}\n    </button>\n  )\n}\n\nexport default ButtonShowAll\n","import Togglable from './Togglable/Togglable'\n\nfunction Form ({ inputValue, login, onLogin }) {\n  return (\n    <Togglable buttonLabel='show login'>\n      <form onSubmit={onLogin}>\n        <input\n          type='text'\n          value={login.username}\n          placeholder='username'\n          onChange={inputValue}\n          name='username'\n          required\n        />\n        <input\n          type='password'\n          value={login.password}\n          placeholder='password'\n          onChange={inputValue}\n          name='password'\n          required\n        />\n        <button>login</button>\n      </form>\n    </Togglable>\n  )\n}\n\nexport default Form\n","import './App.css'\nimport NewTask from './components/NewTask'\nimport ListNotes from './components/Notes/ListNotes'\n\nimport useNotes from './hooks/useNotes'\nimport ButtonShowAll from './components/ButtonShowAll'\nimport Form from './components/Form'\n\nconst App = () => {\n  const {\n    loading, notes, addNote, showAll, handleShowAll, onLogin, inputValue, login, userlg, handleLogout, handleImportant\n  } = useNotes()\n  return (\n    <div className='App'>\n      {\n        !userlg\n          ? <Form\n              onLogin={onLogin} inputValue={inputValue} login={login}\n            />\n          : <NewTask\n              addNote={addNote} handleLogout={handleLogout}\n            />\n      }\n      <h1>NOTES</h1>\n      {\n        loading ? 'Cargando...' : ''\n      }\n      <ButtonShowAll handleShowAll={handleShowAll} showAll={showAll} />\n      <ul>\n        {\n          notes.map((notes) =>\n            <ListNotes key={notes.id} notes={notes} handleImportant={handleImportant} />\n          )\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}